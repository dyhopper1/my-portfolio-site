{"version":3,"sources":["ChildComponents/Footer.js","ChildComponents/Hero.js","MainComponents/WelcomePage.js","MainComponents/WhatIDoPage.js","MainComponents/WhoIAmPage.js","MainComponents/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subTitle","subText","WelcomePage","WhatIDoPage","WhoIAmPage","ContactPage","App","state","headerLinks","path","welcome","what","who","contact","this","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","to","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.660b4a59.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\nfunction Footer(){\n  return (\n    <footer className=\"mt-5\">\n      <Container fluid={ true }>\n        <Row className=\"border-top justify-content-between p-3\">\n          <Col className=\"p-0\" md={ 3 } sm={ 10 }>\n            Kimberly Bone\n          </Col>\n          <Col className=\"p-0 d-flex justify-content-end\" md={ 3 } >\n            Made with â™¡ by Kimberly\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\nexport default Footer\n","import React from 'react';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap'\n\nfunction Hero( props ){\n  return(\n    <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\">\n      <Container fluid={ true }>\n        <Row className=\"justify-content-center py-5\">\n          <Col md={ 5 } sm={ 5 }>\n          { props.title && <h1 className=\"display-1 font-weight-bold\"> { props.title } </h1> }\n          { props.subTitle && <h3 className=\"display-4 font-weight-light\"> { props.subTitle } </h3> }\n          { props.subText && <h3 className=\"lead font-weight-light\"> { props.subText } </h3> }\n          </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  )\n}\nexport default Hero\n","import React from 'react';\nimport Hero from '../ChildComponents/Hero'\n\nfunction WelcomePage( props ){\n  return(\n    <div>\n      <Hero title={ props.title } subTitle={ props.subTitle } subText={ props.subText }></Hero>\n    </div>\n  )\n}\nexport default WelcomePage\n","import React from 'react';\nimport Hero from '../ChildComponents/Hero'\n\n\nfunction WhatIDoPage( props ){\n  return(\n    <div>\n      <Hero title={ props.title } subTitle={ props.subTitle } subText={ props.subText }></Hero>\n    </div>\n  )\n}\nexport default WhatIDoPage\n","import React from 'react';\nimport Hero from '../ChildComponents/Hero'\n\n\nfunction WhoIAmPage( props ){\n  return(\n    <div>\n      <Hero title={ props.title } subTitle={ props.subTitle } subText={ props.subText }></Hero>\n    </div>\n  )\n}\nexport default WhoIAmPage\n","import React from 'react';\nimport Hero from '../ChildComponents/Hero'\n\n\nfunction ContactPage( props ){\n  return(\n    <div>\n      <Hero title={ props.title } subTitle={ props.subTitle } subText={ props.subText }></Hero>\n    </div>\n  )\n}\nexport default ContactPage\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Container, Navbar, Nav } from 'react-bootstrap'\nimport './App.css';\n\nimport Footer from './ChildComponents/Footer'\nimport WelcomePage from './MainComponents/WelcomePage'\nimport WhatIDoPage from './MainComponents/WhatIDoPage'\nimport WhoIAmPage from './MainComponents/WhoIAmPage'\nimport ContactPage from './MainComponents/ContactPage'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      title: \"Kimberly Bone\",\n      headerLinks: [\n        { title: \"Welcome\", path: \"/\" },\n        { title: \"What I Do\", path: \"/what\" },\n        { title: \"Who I Am\", path: \"/who\" },\n        { title: \"Contact Me\", path: \"/contact\" }\n      ],\n      welcome: {\n        title: \"Welcome\",\n        subTitle: \"A little bit about me...\",\n        subText: \"Checkout my projects\"\n      },\n      what: {\n        title: \"What I Do\",\n        subTitle: \"Projects and more...\",\n        subText: \"Checkout my projects\"\n      },\n      who: {\n        title: \"Who Am I?\"\n      },\n      contact: {\n        title: \"Let's Connect\"\n      }\n    }\n  }\n\n  render() {\n    const { headerLinks, welcome, what, who, contact } = this.state\n    return(\n      <Router>\n        <Container className=\"p-0\" fluid={ true }>\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n\n            <Navbar.Brand> Kimberly Bone </Navbar.Brand>\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\"/>\n\n            <Navbar.Collapse id=\"navbar-toggle\">\n\n              <Nav className='ml-auto'>\n                <Link className=\"nav-link\" to=\"/\" > Welcome </Link>\n                <Link className=\"nav-link\" to=\"/what\" > What I do </Link>\n                <Link className=\"nav-link\" to=\"/who\" > Who I am </Link>\n                <Link className=\"nav-link\" to=\"/contact\" > Contact Me </Link>\n              </Nav>\n\n            </Navbar.Collapse>\n\n          </Navbar>\n\n          <Route path=\"/\" exact render={ () => <WelcomePage title={ welcome.title } subTitle={ welcome.subTitle } subText={ welcome.subText }/> }/>\n          <Route path=\"/what\" exact render={ () => <WhatIDoPage title={ what.title } subTitle={ what.subTitle }/> }/>\n          <Route path=\"/who\" exact render={ () => <WhoIAmPage title={ who.title } /> }/>\n          <Route path=\"/contact\" exact render={ () => <ContactPage title={ contact.title } /> }/>\n\n          <Footer></Footer>\n\n        </Container>\n      </Router>\n\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}